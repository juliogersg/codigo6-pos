{"version":3,"sources":["context/posContext.js","environments/environments.js","services/pedidoService.js","context/authContext.js","context/posState.js","modules/pos/pages/components/PosHeader.js","modules/pos/pages/components/PosModalInvoice.js","modules/pos/pages/terminal/components/PosBoletaItem.js","modules/pos/pages/terminal/components/PosBoleta.js","services/categoriaService.js","modules/pos/pages/terminal/components/PosCategoria.js","modules/pos/pages/terminal/components/PosCategorias.js","services/mesaService.js","modules/pos/pages/terminal/components/PosMesa.js","modules/pos/pages/terminal/components/PosMesas.js","modules/pos/pages/terminal/components/PosPlato.js","modules/pos/pages/terminal/components/PosPlatos.js","modules/pos/pages/terminal/PosTerminalScreen.js","modules/pos/PosRouter.js","modules/admin/components/AdminHeader.js","modules/admin/pages/dashboard/AdminDashboardScreen.js","modules/admin/components/AdminModalEditarMesa.js","modules/admin/components/AdminModalCrearMesa.js","modules/admin/pages/mesa/AdminMesaScreen.js","modules/admin/pages/pedido/AdminPedidoScreen.js","services/platoService.js","modules/admin/pages/plato/AdminPlatoCrearScreen.js","modules/admin/pages/plato/AdminPlatoScreen.js","modules/admin/AdminRouter.js","services/authService.js","modules/auth/pages/AuthLoginScreen.js","modules/auth/AuthRouter.js","context/authReducer.js","context/authState.js","PrivateRoute.js","modules/guest/pages/GuestHomeScreen.js","modules/guest/GuestRouter.js","App.js","index.js"],"names":["PosContext","createContext","URL_BACKEND","postPedido","objPedido","a","axios","post","JSON","stringify","headers","rpta","getPedidos","get","AuthContext","PosState","props","useState","objMesaGlobal","setObjMesaGlobal","objCategoriaGlobal","setObjCategoriaGlobal","pedidos","setPedidos","usu_id","useContext","pagarContext","fecha","Date","fechaPedido","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","find","mesa_id","platos","map","objPlato","plato_id","pedidoplato_cant","plato_cant","objPedidoFinal","pedido_fech","pedido_nro","uuidv4","pedido_est","pedidoplatos","console","log","data","ok","pedidosRestantes","filter","Provider","value","modificarPlatoContext","accion","pedidosActuales","posPlatoEncontrado","findIndex","objPlatoPedido","splice","length","pedido","push","children","PosHeader","usu_nom","cerrarSesion","className","src","alt","type","placeholder","onClick","PosModalInvoice","mostrar","setMostrar","objPedidoActual","boletaRef","useRef","Modal","show","onHide","size","Header","closeButton","Title","Body","ref","i","plato_nom","plato_pre","Footer","then","trigger","content","current","PosBoletaItem","objItem","PosBoleta","items","mesa_nro","getCategorias","getPlatosByCategoriaId","categoria_id","PosCategoria","objCategoria","categoria_nom","PosCategorias","categorias","setCategorias","useEffect","getMesas","putMesaById","objMesa","put","postMesa","deleteMesaById","delete","PosMesa","PosMesas","mesas","setMesas","PosPlato","plato_img","toFixed","PosPlatos","setPlatos","Platos","PosTerminalScreen","PosRouter","path","AdminHeader","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","activeClassName","exact","Form","inline","FormControl","Button","AdminDashboardScreen","totalMoney","setTotalMoney","socket","socketIOClient","on","dataJSON","parse","totales","total_caja","emit","disconnect","AdminModalEditarMesa","mostrarModalEditar","setMostrarModalEditar","objMesaEditar","traerMesas","formulario","setFormulario","handleChange","e","target","name","onSubmit","preventDefault","alert","htmlFor","disabled","onChange","mesa_cap","formularioVacio","AdminModalCrearMesa","mostrarModalCrear","setMostrarModalCrear","AdminMesaScreen","cargando","setCargando","columns","label","field","rows","setObjMesaEditar","mounted","setMounted","eliminarMesa","Swal","fire","title","text","showCancelButton","icon","isConfirmed","timer","mesasFormateadas","posicion","acciones","AdminPedidoScreen","datos","setDatos","filas","Mesa","usu_nombre","Usuario","usu_ape","catch","error","getPlatos","postPlato","postUploadImagenByPlatoId","file","miFormData","FormData","append","AdminPlatoCrearScreen","imagenRef","files","rpta2","accept","platosInicial","AdminPlatoScreen","width","Categorium","bordered","hover","striped","AdminRouter","postLogin","objLogin","postVerificar","token","withRouter","history","correo","password","iniciarSesionContext","payloadString","split","payloadDecoded","atob","usu_tipo","AuthRouter","authReducer","stateAntiguo","payload","action","localStorage","removeItem","autenticado","initialState","useReducer","state","setState","setItem","payloadStringDecript","payloadJson","getItem","iniciarSesionConLocalStorage","PrivateRoute","startsWith","GuestHomeScreen","style","minHeight","GuestRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d3549fd.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\nconst PosContext = createContext();\r\nexport default PosContext;","export const URL_BACKEND = \"https://codigo4-pos.herokuapp.com\";","import axios from \"axios\";\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postPedido = async (objPedido) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/pedido`,\r\n    JSON.stringify(objPedido),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    });\r\n  return rpta;\r\n}\r\n\r\nexport const getPedidos = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/pedido`);\r\n  return rpta;\r\n}","import { createContext } from \"react\"\r\nconst AuthContext = createContext();\r\nexport default AuthContext;","import React, { useState, useContext } from 'react'\r\nimport PosContext from './posContext'\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { postPedido } from '../services/pedidoService';\r\nimport AuthContext from './authContext';\r\n\r\nconst PosState = (props) => {\r\n\r\n  const [objMesaGlobal, setObjMesaGlobal] = useState(null);\r\n  const [objCategoriaGlobal, setObjCategoriaGlobal] = useState(null);\r\n  const [pedidos, setPedidos] = useState([]);\r\n  const { usu_id } = useContext(AuthContext);\r\n\r\n\r\n\r\n  const modificarPlatoContext = (objPlato, accion) => {\r\n    // obntener una copia del estado de pedidos\r\n    let pedidosActuales = [...pedidos]\r\n    //1. Verificar si tenemos una mesa global seleccionada para agregar el plato\r\n    // en caso contrario no hacer nada.\r\n    if (!objMesaGlobal) { return; }\r\n\r\n    // 2. Preguntamos si el arreglo de pedidos, ya tiene un pedido pendiente\r\n    // en la mesa global seleccionada\r\n    let objPedido = pedidosActuales.find((objPedido) => objMesaGlobal.mesa_id === objPedido.mesa_id);\r\n    if (objPedido) {\r\n      //  Ya había un pedido para la mesa global seleccionada\r\n      // Si hemos encontrado un objPedido, no implica que el plato que queremos agregar\r\n      // esté previamente en el arreglo de platos de dicho pedido\r\n      // Recorriendo el arreglo de platos para ver si encontramos un plato igual\r\n      // al que queremos agregar\r\n      let posPlatoEncontrado = objPedido.platos.findIndex((objPlatoPedido) => objPlatoPedido.plato_id === objPlato.plato_id);\r\n\r\n      // si existía un plato igual al que queremos agregar?\r\n      if (posPlatoEncontrado >= 0) {\r\n\r\n        if (accion === \"sumar\") {\r\n          // significa que el plato sí existía en una posición del arerglo de platos del objPedido\r\n          // agregar una unidad del nuevo plato al pedido\r\n          objPedido.platos[posPlatoEncontrado].plato_cant++;\r\n          setPedidos(pedidosActuales);\r\n        } else {\r\n          // En caso de querer restar un plato, hay que verificar que debemos tener \r\n          // más de una unidad de ese plato o en caso contrario, borrar el plato del arreglo de platos\r\n          if (objPedido.platos[posPlatoEncontrado].plato_cant > 1) {\r\n            objPedido.platos[posPlatoEncontrado].plato_cant--;\r\n            setPedidos(pedidosActuales);\r\n          } else {\r\n            // en caso habría una unidad del plato encontrado, borrar dicho plato del arreglo\r\n            objPedido.platos.splice(posPlatoEncontrado, 1);\r\n\r\n            // // Como quiera que acabamos de borrar un plato del pedido actual, es posible\r\n            // // que dicho plato sea el último o único de ese pedido, conclusión, debemos de \r\n            // // borrar ese objPedido\r\n            if (objPedido.platos.length === 0) {\r\n              pedidosActuales = pedidosActuales.filter((pedido) => pedido.mesa_id !== objMesaGlobal.mesa_id);\r\n\r\n            }\r\n\r\n\r\n            setPedidos(pedidosActuales);\r\n          }\r\n\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (accion === \"sumar\") {\r\n          // es el primer plato en un pedido que ya existia en la mesa global seleccionada\r\n          objPedido.platos.push({\r\n            ...objPlato,\r\n            plato_cant: 1\r\n          });\r\n          //OJO: objPedido, representa a uno de los elementos del arreglo \"pedidosActuales\"\r\n          // Nosotros acabamos de modificar el \"objPedido\" agregándole un nuevo plato a su arreglo de\r\n          // \"platos\".\r\n          // Cuando \"objPedido\" es modificado, éste guarda la dirección de memoria del \"objPedido\" al que\r\n          // representa dentro del arreglo \"pedidosActuales\",\r\n          // Conclusión:\r\n          //Cuando modificamos \"objPedido\", internamente se modifica el \"objPedido\" del arreglo \r\n          // \"pedidosActuales\", por eso, volvemos a actualizar el arreglo \"pedidosActuales\"\r\n          setPedidos(pedidosActuales);\r\n        } else {\r\n          // en caso de no encontrar un plato a \"restar\" en el pedido, no se hace nada.\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n    } else {\r\n      if (accion === \"sumar\") {\r\n        // No había ningún pedido para la mesa global selecciona (es un nuevo pedido)\r\n        pedidosActuales.push({\r\n          usu_id: 0,\r\n          mesa_id: objMesaGlobal.mesa_id,\r\n          pedido_est: \"pendiente\",\r\n          platos: [\r\n            {\r\n              ...objPlato,\r\n              plato_cant: 1\r\n            }\r\n          ]\r\n        });\r\n        setPedidos(pedidosActuales);\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  const pagarContext = async () => {\r\n    // {\r\n    //   \"pedido_fech\": \"string\", ejm: 2020-11-05 22:01:56\r\n    //   \"pedido_nro\": \"string\",\r\n    //   \"pedido_est\": \"string\",\r\n    //   \"usu_id\": 0,\r\n    //   \"mesa_id\": 0,\r\n    //   \"pedidoplatos\": [\r\n    //     {\r\n    //       \"plato_id\": 0,\r\n    //       \"peditoplato_cant\": 0\r\n    //     }\r\n    //   ]\r\n    // }\r\n    let fecha = new Date();\r\n\r\n    let fechaPedido = fecha.getFullYear() + \"-\" +\r\n      (fecha.getMonth() + 1) + \"-\" + fecha.getDate() + \" \" +\r\n      fecha.getHours() + \":\" + fecha.getMinutes() + \":\" + fecha.getSeconds()\r\n\r\n    // encontrar el pedido del cual quiero hacer el pago\r\n    let objPedido = pedidos.find(objPedido => objMesaGlobal.mesa_id === objPedido.mesa_id)\r\n    //  armar el arreglo de platos para enviar al backend\r\n    let platos = objPedido.platos.map((objPlato) => {\r\n      return {\r\n        plato_id: objPlato.plato_id,\r\n        pedidoplato_cant: objPlato.plato_cant\r\n      }\r\n    });\r\n\r\n    let objPedidoFinal = {\r\n      pedido_fech: fechaPedido,\r\n      pedido_nro: uuidv4(),\r\n      pedido_est: \"pagado\",\r\n      usu_id: usu_id,\r\n      mesa_id: objMesaGlobal.mesa_id,\r\n      pedidoplatos: platos\r\n    }\r\n\r\n    console.log(objPedidoFinal);\r\n\r\n\r\n\r\n\r\n    const rpta = await postPedido(objPedidoFinal);\r\n\r\n    if (rpta.data.ok) {\r\n      // borrar el pedido de la mesa actual\r\n      let pedidosRestantes = pedidos.filter(objPedido => objPedido.mesa_id !== objMesaGlobal.mesa_id);\r\n      setPedidos([...pedidosRestantes]);\r\n      setObjMesaGlobal(null);\r\n      return true;\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <PosContext.Provider value={{\r\n      pagarContext,\r\n      objMesaGlobal,\r\n      objCategoriaGlobal,\r\n      pedidos,\r\n      setObjMesaGlobal,\r\n      setObjCategoriaGlobal,\r\n      modificarPlatoContext\r\n    }}>\r\n      {props.children}\r\n    </PosContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PosState\r\n","import React, { useContext } from 'react'\r\nimport AuthContext from '../../../../context/authContext';\r\n\r\nconst PosHeader = () => {\r\n\r\n  const { usu_nom, cerrarSesion } = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img src=\"/imagenes/logo.svg\" alt=\"\" />\r\n      </div>\r\n      <div className=\"header__buscador\">\r\n        <img src=\"/imagenes/search.svg\" alt=\"\" />\r\n        <input type=\"text\" className=\"header__input\" placeholder=\"Busca un término\" />\r\n      </div>\r\n      <div className=\"header__usuario\">\r\n        <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span>{usu_nom}</span>\r\n        <button className=\"btn btn-danger\" onClick={() => {\r\n          cerrarSesion();\r\n          // \r\n        }}>\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PosHeader\r\n","import React, { useContext, useRef } from 'react'\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PosContext from '../../../../context/posContext';\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nconst PosModalInvoice = ({ mostrar, setMostrar }) => {\r\n\r\n  const { pedidos, objMesaGlobal, pagarContext } = useContext(PosContext);\r\n\r\n  let objPedidoActual = pedidos.find(objPedido => objPedido.mesa_id === objMesaGlobal?.mesa_id);\r\n\r\n  const boletaRef = useRef();\r\n\r\n  return (\r\n\r\n    objPedidoActual ? (\r\n      <Modal show={mostrar} onHide={() => { setMostrar(false) }} size={\"xl\"} >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Boleta</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\r\n          <div className=\"container\" ref={boletaRef}>\r\n            <div className=\"col-md-12\">\r\n              <div className=\"invoice\">\r\n                <div className=\"invoice-company text-inverse f-w-600\">\r\n                  Company Name, Inc\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-header\">\r\n                  <div className=\"invoice-from\">\r\n                    <small>from</small>\r\n                    <address className=\"m-t-5 m-b-5\">\r\n                      <strong className=\"text-inverse\">Twitter, Inc.</strong><br />\r\n                    Street Address<br />\r\n                    City, Zip Code<br />\r\n                    Phone: (123) 456-7890<br />\r\n                    Fax: (123) 456-7890\r\n                    </address>\r\n                  </div>\r\n                  <div className=\"invoice-to\">\r\n                    <small>to</small>\r\n                    <address className=\"m-t-5 m-b-5\">\r\n                      <strong className=\"text-inverse\">Company Name</strong><br />\r\n                    Street Address<br />\r\n                    City, Zip Code<br />\r\n                    Phone: (123) 456-7890<br />\r\n                    Fax: (123) 456-7890\r\n                    </address>\r\n                  </div>\r\n                  <div className=\"invoice-date\">\r\n                    <small>Invoice / July period</small>\r\n                    <div className=\"date text-inverse m-t-5\">August 3,2012</div>\r\n                    <div className=\"invoice-detail\">\r\n                      #0000123DSS<br />\r\n                    Services Product\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-content\">\r\n\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-invoice\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>Cant.</th>\r\n                          <th>Descripción</th>\r\n                          <th>P.Unitario</th>\r\n                          <th>P.Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n\r\n                        {\r\n                          objPedidoActual.platos.map((objPlato, i) => {\r\n                            return (\r\n                              <tr key={objPlato.plato_id}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{objPlato.plato_cant}</td>\r\n                                <td>{objPlato.plato_nom}</td>\r\n                                <td>S/ {objPlato.plato_pre}</td>\r\n                                <td>S/ {+objPlato.plato_pre * +objPlato.plato_cant}</td>\r\n                              </tr>\r\n                            )\r\n                          })\r\n                        }\r\n\r\n\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"invoice-price\">\r\n                    <div className=\"invoice-price-left\">\r\n                      <div className=\"invoice-price-row\">\r\n                        <div className=\"sub-price\">\r\n                          <small>SUBTOTAL</small>\r\n                          <span className=\"text-inverse\">$4,500.00</span>\r\n                        </div>\r\n                        <div className=\"sub-price\">\r\n                          <i className=\"fa fa-plus text-muted\"></i>\r\n                        </div>\r\n                        <div className=\"sub-price\">\r\n                          <small>PAYPAL FEE (5.4%)</small>\r\n                          <span className=\"text-inverse\">$108.00</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"invoice-price-right\">\r\n                      <small>TOTAL</small> <span className=\"f-w-600\">$4508.00</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-note\">\r\n                  * Make all cheques payable to [Your Company Name]<br />\r\n                  * Payment is due within 30 days<br />\r\n                  * If you have any questions concerning this invoice, contact  [Name, Phone Number, Email]\r\n                </div>\r\n\r\n\r\n                <div className=\"invoice-footer\">\r\n                  <p className=\"text-center m-b-5 f-w-600\">\r\n                    THANK YOU FOR YOUR BUSINESS\r\n                  </p>\r\n                  <p className=\"text-center\">\r\n                    <span className=\"m-r-10\"><i className=\"fa fa-fw fa-lg fa-globe\"></i> matiasgallipoli.com</span>\r\n                    <span className=\"m-r-10\"><i className=\"fa fa-fw fa-lg fa-phone-volume\"></i> T:016-18192302</span>\r\n                    <span className=\"m-r-10\"><i className=\"fa fa-fw fa-lg fa-envelope\"></i> rtiemps@gmail.com</span>\r\n                  </p>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-success btn-lg\" onClick={() => {\r\n            pagarContext().then(rpta => {\r\n              if (rpta) {\r\n                setMostrar(false);\r\n              }\r\n            })\r\n          }}>\r\n            PAGAR\r\n          </button>\r\n          <ReactToPrint\r\n            trigger={() => <button className=\"btn btn-primary btn-lg\">Imprimir</button>}\r\n            content={() => boletaRef.current} />\r\n        </Modal.Footer>\r\n      </Modal >\r\n    ) : null\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default PosModalInvoice\r\n","import React from 'react'\r\n\r\nconst PosBoletaItem = ({ objItem }) => {\r\n  return (\r\n    <li className=\"comanda__item\">\r\n      <p className=\"comanda__nombre\">\r\n        <span><strong>{objItem.plato_nom}</strong></span>\r\n        <span>Precio: S/ {objItem.plato_pre}</span>\r\n      </p>\r\n      <p className=\"comanda__cantidad\">{objItem.plato_cant}</p>\r\n      <p className=\"comanda__precio\">\r\n        <strong>S/ {objItem.plato_cant * +objItem.plato_pre}</strong>\r\n      </p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosBoletaItem\r\n","import React, { useContext, useState } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\nimport PosModalInvoice from '../../components/PosModalInvoice';\r\nimport PosBoletaItem from './PosBoletaItem'\r\n\r\n\r\nconst PosBoleta = () => {\r\n\r\n  const { pedidos, objMesaGlobal } = useContext(PosContext);\r\n  const [mostrar, setMostrar] = useState(false);\r\n\r\n  let items = [];\r\n\r\n  // si existe una mesa global seleccionada, entonces\r\n  // obtener el valor del arreglo de PLATOS de esa mesa\r\n  if (objMesaGlobal) {\r\n    // encontrando el objeto que tiene la mesa global seleccionada\r\n    let objPedidoActual = pedidos.find((objPedido) => objPedido.mesa_id === objMesaGlobal.mesa_id);\r\n    // si el objetoPedidoActual existe (lo cual implica que existe un pedido para la mesa global seleccionada)\r\n    if (objPedidoActual) {\r\n      // tomamos sus platos en el arreglo items\r\n      items = objPedidoActual.platos;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"boleta\">\r\n      <h3>Pedido Mesa: &nbsp;\r\n        <span className=\"color-secundario\">\r\n          {objMesaGlobal ? objMesaGlobal.mesa_nro : \"Seleccione\"}\r\n        </span>\r\n      </h3>\r\n      <hr />\r\n      <div className=\"comanda\">\r\n        <h4 className=\"comanda__mesa\">\r\n\r\n          {objMesaGlobal ? \"Mesa \" + objMesaGlobal.mesa_nro : \"Seleccione\"}\r\n        </h4>\r\n        <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n        <hr />\r\n\r\n        <ul className=\"comanda__lista\">\r\n          {\r\n            items.map(objItem => {\r\n              return <PosBoletaItem key={objItem.plato_id}\r\n                objItem={objItem} />\r\n            })\r\n          }\r\n        </ul>\r\n        <button className=\"boton boton-success boton-block\" onClick={() => {\r\n          setMostrar(true);\r\n        }}>\r\n          PAGAR\r\n        </button>\r\n      </div>\r\n      <PosModalInvoice mostrar={mostrar}\r\n        setMostrar={setMostrar} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default PosBoleta\r\n","import axios from \"axios\"\r\nimport { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const getCategorias = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/categoria`);\r\n  return rpta;\r\n}\r\n\r\nexport const getPlatosByCategoriaId = async (categoria_id) => {\r\n\r\n  const rpta = await axios.get(`${URL_BACKEND}/categoria/${categoria_id}/platos`);\r\n  return rpta;\r\n\r\n}","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\n\r\nconst PosCategoria = ({ objCategoria }) => {\r\n\r\n  const { objCategoriaGlobal, setObjCategoriaGlobal } = useContext(PosContext);\r\n\r\n\r\n\r\n  return (\r\n    <li className={objCategoria.categoria_id === objCategoriaGlobal?.categoria_id ? \"active\" : \"\"}\r\n      onClick={() => {\r\n        setObjCategoriaGlobal({ ...objCategoria });\r\n      }}>\r\n      <img src=\"/imagenes/plato_blanco.svg\" alt=\"\" />\r\n      <span>{objCategoria.categoria_nom}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosCategoria\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getCategorias } from '../../../../../services/categoriaService';\r\nimport PosCategoria from './PosCategoria'\r\n\r\nconst PosCategorias = () => {\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n  useEffect(() => {\r\n    getCategorias().then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        setCategorias(rpta.data.content);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__lista\">\r\n        {categorias.map((objCategoria) => {\r\n          return <PosCategoria key={objCategoria.categoria_id}\r\n            objCategoria={objCategoria} />\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default PosCategorias\r\n","import axios from \"axios\";\r\n\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getMesas = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/mesa`);\r\n  return rpta\r\n}\r\n\r\nexport const putMesaById = async (objMesa) => {\r\n\r\n  const rpta = await axios.put(\r\n    `${URL_BACKEND}/mesa/${objMesa.mesa_id}`,\r\n    JSON.stringify(objMesa),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n\r\n}\r\n\r\nexport const postMesa = async (objMesa) => {\r\n  const rpta = axios.post(\r\n    `${URL_BACKEND}/mesa`,\r\n    JSON.stringify(objMesa),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  return rpta;\r\n}\r\n\r\nexport const deleteMesaById = async (mesa_id) => {\r\n  const rpta = await axios.delete(`${URL_BACKEND}/mesa/${mesa_id}`);\r\n  return rpta;\r\n}\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext'\r\n\r\n\r\nconst PosMesa = ({ objMesa }) => {\r\n\r\n  const { objMesaGlobal, setObjMesaGlobal } = useContext(PosContext);\r\n\r\n\r\n  return (\r\n    // <li className=\"mesas__mesa activo\">\r\n    <li className={`mesas__mesa ${objMesaGlobal?.mesa_id === objMesa.mesa_id ? \"activo\" : \"\"}`}\r\n      onClick={() => {\r\n        setObjMesaGlobal({ ...objMesa });\r\n      }}>\r\n      <span className=\"mesas__titulo\">Mesa</span>\r\n      <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosMesa\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getMesas } from '../../../../../services/mesaService';\r\nimport PosMesa from './PosMesa'\r\n\r\nconst PosMesas = () => {\r\n\r\n  const [mesas, setMesas] = useState([]);\r\n  useEffect(() => {\r\n    getMesas().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        setMesas(rpta.data.content);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {\r\n          mesas.map((objMesa) => {\r\n            return <PosMesa key={objMesa.mesa_id} objMesa={objMesa} />\r\n          })\r\n        }\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosMesas\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\n\r\nconst PosPlato = ({ objPlato }) => {\r\n\r\n  const { modificarPlatoContext } = useContext(PosContext);\r\n\r\n  return (\r\n    <div className=\"carta__plato\">\r\n      <img\r\n        src={objPlato.plato_img}\r\n        alt=\"\" />\r\n      <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n      <span className=\"carta__precio\">S/ {(+objPlato.plato_pre).toFixed(2)}</span>\r\n      <div className=\"carta__botones\">\r\n        <button className=\"boton boton-outline-primary boton-restar\"\r\n          onClick={() => {\r\n            modificarPlatoContext({ ...objPlato }, \"restar\")\r\n          }}>\r\n          -1\r\n        </button>\r\n        <button className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => {\r\n            modificarPlatoContext({ ...objPlato }, \"sumar\");\r\n          }}>\r\n          +1\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlato\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport PosContext from '../../../../../context/posContext';\r\nimport { getPlatosByCategoriaId } from '../../../../../services/categoriaService';\r\nimport PosPlato from './PosPlato'\r\n\r\nconst PosPlatos = () => {\r\n\r\n  const [platos, setPlatos] = useState([]);\r\n  const { objCategoriaGlobal } = useContext(PosContext);\r\n\r\n  useEffect(() => {\r\n    if (objCategoriaGlobal) {\r\n      getPlatosByCategoriaId(objCategoriaGlobal.categoria_id).then(rpta => {\r\n        if (rpta.data.ok) {\r\n          setPlatos(rpta.data.content.Platos);\r\n        }\r\n      })\r\n    }\r\n  }, [objCategoriaGlobal]);\r\n\r\n  return (\r\n    <div className=\"carta\">\r\n      <h3>Lista de Platos Categoria: &nbsp;\r\n        <span className=\"color-secundario\">\r\n          {objCategoriaGlobal ? objCategoriaGlobal.categoria_nom : \"Seleccione una categoría\"}\r\n        </span>\r\n      </h3>\r\n\r\n      <div className=\"carta__platos\">\r\n        {\r\n          platos.map((objPlato) => {\r\n            return <PosPlato key={objPlato.plato_id} objPlato={objPlato} />\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlatos\r\n","import React from 'react'\r\nimport PosHeader from '../components/PosHeader'\r\nimport PosBoleta from './components/PosBoleta'\r\nimport PosCategorias from './components/PosCategorias'\r\nimport PosMesas from './components/PosMesas'\r\nimport PosPlatos from './components/PosPlatos'\r\n\r\nconst PosTerminalScreen = () => {\r\n  return (\r\n    <>\r\n      <PosHeader />\r\n      <main className=\"pos-container\">\r\n        <PosCategorias />\r\n        <section className=\"tabla\">\r\n          <PosMesas />\r\n          <div className=\"pedido\">\r\n            <PosPlatos />\r\n            <PosBoleta />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PosTerminalScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport PosState from '../../context/posState';\r\nimport PosTerminalScreen from './pages/terminal/PosTerminalScreen';\r\n\r\nconst PosRouter = () => {\r\n  return (\r\n    <PosState>\r\n      <Switch>\r\n        <Route path=\"/pos/terminal\">\r\n          <PosTerminalScreen />\r\n        </Route>\r\n      </Switch>\r\n    </PosState>\r\n  )\r\n}\r\n\r\nexport default PosRouter\r\n","import React from 'react'\r\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\"\r\nconst AdminHeader = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n\r\n          <NavLink to=\"/admin\" className=\"nav-link\" activeClassName={\"active\"} exact>Dashboard</NavLink>\r\n          <NavLink to=\"/admin/mesa\" className=\"nav-link\" activeClassName={\"active\"} exact>Mesas</NavLink>\r\n          <NavLink to=\"/admin/plato\" className=\"nav-link\" activeClassName={\"active\"} exact>Platos</NavLink>\r\n          <NavLink to=\"/admin/pedido\" className=\"nav-link\" activeClassName={\"active\"} exact>Pedidos</NavLink>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-success\">Search</Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React, { useEffect, useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport { URL_BACKEND } from '../../../../environments/environments';\r\n\r\nconst AdminDashboardScreen = () => {\r\n\r\n  const [mesas, setMesas] = useState(0);\r\n  const [pedidos, setPedidos] = useState(0);\r\n  const [categorias, setCategorias] = useState(0);\r\n  const [totalMoney, setTotalMoney] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(URL_BACKEND);\r\n    socket.on(\"reporte-dashboard\", (data) => {\r\n      const dataJSON = JSON.parse(data);\r\n      setMesas(dataJSON.totales.mesas);\r\n      setPedidos(dataJSON.totales.pedidos);\r\n      setCategorias(dataJSON.totales.categorias);\r\n      setTotalMoney(dataJSON.total_caja.totalMoney);\r\n    });\r\n\r\n    socket.emit(\"peticion-reporte-dashboard\");\r\n\r\n    // clean up del useEffect\r\n    // la funcion de clean up se ejecuta cuando un componente es desmontado\r\n    // se debe usar para cancelar peticiones asincronas, liberar memoria,\r\n    // cancelacion de sockets, etc ... \r\n    return ()=>{\r\n      socket.disconnect();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-3 text-center\">Dashboard Administrativo</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de Mesas</div>\r\n            <div className=\"card-body text-center\">\r\n              <span className=\"display-4\">{mesas}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de Pedidos</div>\r\n            <div className=\"card-body text-center\">\r\n              <span className=\"display-4\">{pedidos}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de Categorias</div>\r\n            <div className=\"card-body text-center\">\r\n              <span className=\"display-4\">{categorias}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total Ingresos</div>\r\n            <div className=\"card-body text-center\">\r\n              <p className=\"display-1\"><span>S/ {totalMoney.toFixed(2)}</span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminDashboardScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Modal } from \"react-bootstrap\"\r\nimport { putMesaById } from '../../../services/mesaService';\r\n\r\nconst AdminModalEditarMesa = ({\r\n  mostrarModalEditar,\r\n  setMostrarModalEditar,\r\n  objMesaEditar,\r\n  traerMesas }) => {\r\n\r\n  const [formulario, setFormulario] = useState(objMesaEditar);\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    setFormulario({ ...objMesaEditar })\r\n  }, [objMesaEditar])\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    putMesaById(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        alert(\"Mesa editada correctamente\");\r\n        setMostrarModalEditar(false);\r\n        traerMesas();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal show={mostrarModalEditar} onHide={() => {\r\n      // settear objMesaEditar a null nuevamente\r\n      setMostrarModalEditar(false)\r\n    }} size={\"xl\"} >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar Mesa</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {\r\n          formulario ?\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Id:</label>\r\n                <input type=\"text\" className=\"form-control\" value={formulario.mesa_id} disabled />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Nro Mesa:</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                  value={formulario.mesa_nro} name=\"mesa_nro\" onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Capacidad:</label>\r\n                <input type=\"number\" className=\"form-control\"\r\n                  value={formulario.mesa_cap} name=\"mesa_cap\" onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">Guardar Cambios</button>\r\n              </div>\r\n            </form> : null\r\n        }\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default AdminModalEditarMesa\r\n","import React, { useState } from 'react'\r\nimport { Modal } from \"react-bootstrap\"\r\nimport { postMesa } from '../../../services/mesaService';\r\n\r\n\r\nconst formularioVacio = {\r\n  mesa_cap: \"\",\r\n  mesa_nro: 0\r\n}\r\n\r\n\r\nconst AdminModalCrearMesa = ({ mostrarModalCrear, setMostrarModalCrear, traerMesas }) => {\r\n\r\n  const [formulario, setFormulario] = useState({ ...formularioVacio });\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postMesa(formulario).then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        setMostrarModalCrear(false);\r\n        setFormulario(formularioVacio);\r\n        traerMesas();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal show={mostrarModalCrear} onHide={() => {\r\n      setMostrarModalCrear(false)\r\n    }} size={\"xl\"} >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Crear Mesa</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Nro Mesa:</label>\r\n            <input type=\"text\" className=\"form-control\"\r\n              value={formulario.mesa_nro} name=\"mesa_nro\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Capacidad:</label>\r\n            <input type=\"number\" className=\"form-control\"\r\n              value={formulario.mesa_cap} name=\"mesa_cap\" onChange={handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">Crea Mesa</button>\r\n          </div>\r\n        </form>\r\n\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default AdminModalCrearMesa\r\n","import React, { useEffect, useState } from 'react'\r\nimport { deleteMesaById, getMesas } from '../../../../services/mesaService';\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport AdminModalEditarMesa from '../../components/AdminModalEditarMesa';\r\nimport AdminModalCrearMesa from '../../components/AdminModalCrearMesa';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AdminMesaScreen = () => {\r\n\r\n  const [mostrarModalEditar, setMostrarModalEditar] = useState(false);\r\n  const [mostrarModalCrear, setMostrarModalCrear] = useState(false);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [mesas, setMesas] = useState({\r\n    columns: [\r\n      { label: '#', field: 'posicion', },\r\n      { label: 'Id', field: 'mesa_id', },\r\n      { label: 'Nro Mesa', field: 'mesa_nro', },\r\n      { label: 'Capacidad', field: 'mesa_cap', },\r\n      { label: 'Acciones', field: 'acciones' }\r\n    ],\r\n    rows: [],\r\n  });\r\n  const [objMesaEditar, setObjMesaEditar] = useState(null);\r\n\r\n  const [mounted, setMounted] = useState(true);\r\n\r\n  const eliminarMesa = mesa_id => {\r\n    Swal.fire({\r\n      title: '¿Seguro que deseas eliminar la mesa?',\r\n      text: 'Los cambios serán irreversibles',\r\n      showCancelButton: true,\r\n      icon: 'error'\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        deleteMesaById(mesa_id).then(rpta => {\r\n          if (rpta.data.ok) {\r\n            Swal.fire({\r\n              text: 'Mesa eliminada correctamente',\r\n              icon: 'success',\r\n              timer: 1500\r\n            })\r\n            traerMesas();\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const traerMesas = () => {\r\n    setCargando(true);\r\n    getMesas().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        let mesasFormateadas = rpta.data.content.map((objMesa, i) => {\r\n          return {\r\n            ...objMesa,\r\n            mesa_cap: objMesa.mesa_cap + \" personas\",\r\n            posicion: i + 1,\r\n            acciones:\r\n              <>\r\n                <button className=\"btn btn-warning\" onClick={() => {\r\n                  setObjMesaEditar({ ...objMesa });\r\n                  setMostrarModalEditar(true);\r\n                }}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => {\r\n                  eliminarMesa(objMesa.mesa_id)\r\n                }}>\r\n                  Eliminar\r\n                </button>\r\n              </>\r\n          }\r\n        })\r\n\r\n        if (mounted) {\r\n          setMesas({\r\n            ...mesas,\r\n            rows: mesasFormateadas\r\n          })\r\n          setCargando(false);\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerMesas();\r\n\r\n    // clean up\r\n    return ()=>{\r\n      setMounted(false);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <main className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"card shadow\">\r\n              <div className=\"card-body\">\r\n                <button className=\"btn btn-primary\" onClick={() => {\r\n                  setMostrarModalCrear(true);\r\n                }}>Crear Mesa</button>\r\n                <hr />\r\n                {\r\n                  cargando ?\r\n                    <div className=\"alert alert-info\">\r\n                      Cargando\r\n                  </div> :\r\n                    <MDBDataTableV5 data={mesas} />\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n\r\n      <AdminModalEditarMesa\r\n        mostrarModalEditar={mostrarModalEditar}\r\n        setMostrarModalEditar={setMostrarModalEditar}\r\n        objMesaEditar={objMesaEditar}\r\n        traerMesas={traerMesas}\r\n      />\r\n      <AdminModalCrearMesa\r\n        mostrarModalCrear={mostrarModalCrear}\r\n        setMostrarModalCrear={setMostrarModalCrear}\r\n        traerMesas={traerMesas} />\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminMesaScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getPedidos } from '../../../../services/pedidoService'\r\nimport { MDBDataTableV5 } from \"mdbreact\"\r\n\r\nconst AdminPedidoScreen = () => {\r\n\r\n  const [pedidos, setPedidos] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [datos, setDatos] = useState({\r\n    columns: [\r\n      { label: \"#\", field: \"posicion\" },\r\n      { label: \"Id\", field: \"pedido_id\" },\r\n      { label: \"Fecha\", field: \"pedido_fech\" },\r\n      { label: \"Codigo\", field: \"pedido_nro\" },\r\n      { label: \"Estado\", field: \"pedido_est\" },\r\n      { label: \"Nro Mesa\", field: \"mesa_nro\" },\r\n      { label: \"Usuario\", field: \"usu_nombre\" },\r\n      { label: \"Acciones\", field: \"acciones\" }\r\n    ],\r\n    rows: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    getPedidos().then(rpta => {\r\n      console.log(rpta.data.pedidos);\r\n      if (rpta.data.ok) {\r\n        let filas = rpta.data.pedidos.map((objPedido, i) => {\r\n          return {\r\n            ...objPedido,\r\n            posicion: i + 1,\r\n            mesa_nro: objPedido.Mesa?.mesa_nro || \"s/n\",\r\n            usu_nombre: (objPedido.Usuario?.usu_nom || \"\") + \" \" + (objPedido.Usuario?.usu_ape || \"\"),\r\n            acciones: <button>Ver Detalles</button>\r\n          }\r\n        });\r\n        \r\n        console.log(filas);\r\n        // setPedidos(rpta.data.pedidos);\r\n        setDatos({ ...datos, rows: filas })\r\n        setCargando(false);\r\n\r\n      } else {\r\n        setCargando(false);\r\n      }\r\n    }).catch(error => {\r\n      setCargando(false);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4\">\r\n            Lista de Pedidos\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {\r\n        !cargando ?\r\n          <MDBDataTableV5 data={datos} /> :\r\n          <div className=\"alert alert-info\">\r\n            <h4>CARGANDO...</h4>\r\n          </div>\r\n      }\r\n\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminPedidoScreen\r\n","import axios from \"axios\"\r\nimport { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const getPlatos = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/plato`);\r\n  return rpta;\r\n}\r\n\r\nexport const postPlato = async (objPlato) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/plato`,\r\n    JSON.stringify(objPlato),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  return rpta;\r\n}\r\n\r\nexport const postUploadImagenByPlatoId = async (file, plato_id) => {\r\n\r\n  let miFormData = new FormData();\r\n  miFormData.append(\"imagen\", file);\r\n  miFormData.append(\"plato_id\", plato_id);\r\n\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/plato/imagen/upload`,\r\n    miFormData,\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"multipart/form-data\"\r\n      }\r\n    }\r\n  );\r\n  return rpta;\r\n\r\n}","import React, { useEffect, useState, useRef } from 'react'\r\nimport { getCategorias } from '../../../../services/categoriaService';\r\nimport { postPlato, postUploadImagenByPlatoId } from '../../../../services/platoService';\r\n\r\nconst AdminPlatoCrearScreen = () => {\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    plato_nom: \"\",\r\n    plato_img: \"\",\r\n    plato_pre: 0,\r\n    categoria_id: 0\r\n  })\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  const imagenRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    getCategorias().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        setCategorias(rpta.data.content);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  const handleChange = e => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    postPlato(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        postUploadImagenByPlatoId(imagenRef.current.files[0], rpta.data.content.plato_id)\r\n          .then((rpta2) => {\r\n            console.log(rpta2);\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h4>Formulario de Creación de un Plato</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Nombre:</label>\r\n                  <input type=\"text\" className=\"form-control\"\r\n                    value={formulario.plato_nom}\r\n                    name=\"plato_nom\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Precio:</label>\r\n                  <input type=\"number\" className=\"form-control\"\r\n                    value={formulario.plato_pre}\r\n                    name=\"plato_pre\"\r\n                    onChange={handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Categoria</label>\r\n                  <select name=\"\" className=\"form-control\"\r\n                    value={formulario.categoria_id}\r\n                    name=\"categoria_id\"\r\n                    onChange={handleChange}>\r\n                    <option value=\"0\">Seleccione</option>\r\n                    {\r\n                      categorias.map((objCategoria, i) => {\r\n                        return <option key={i} value={objCategoria.categoria_id}>\r\n                          {objCategoria.categoria_nom}\r\n                        </option>\r\n                      })\r\n                    }\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Imagen</label>\r\n                  <input type=\"file\" ref={imagenRef} accept=\"image/*\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Crear Plato\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AdminPlatoCrearScreen\r\n","import { MDBDataTableV5 } from 'mdbreact';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getPlatos } from '../../../../services/platoService';\r\nimport { Link } from \"react-router-dom\"\r\n// import { withRouter } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst platosInicial = {\r\n  columns: [\r\n    { label: '#', field: 'posicion', },\r\n    { label: 'Id', field: 'plato_id', },\r\n    { label: 'Nombre', field: 'plato_nom', },\r\n    { label: 'Imagen', field: 'plato_img', },\r\n    { label: 'Precio', field: 'plato_pre' },\r\n    { label: 'Categoria', field: 'categoria_nom' }\r\n  ],\r\n  rows: [],\r\n}\r\n\r\n\r\nconst AdminPlatoScreen = () => {\r\n\r\n  const [cargando, setCargando] = useState(true);\r\n  const [platos, setPlatos] = useState(platosInicial);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getPlatos().then(rpta => {\r\n      if (rpta.data.ok) {\r\n        if(mounted){\r\n          setPlatos({\r\n            ...platosInicial,\r\n            rows: rpta.data.content.map((objPlato, i) => {\r\n              return {\r\n                posicion: i + 1,\r\n                plato_id: objPlato.plato_id,\r\n                plato_nom: objPlato.plato_nom,\r\n                plato_img: <img src={objPlato.plato_img} width=\"100\" />,\r\n                plato_pre: `S/ ${(+objPlato.plato_pre).toFixed(2)}`,\r\n                categoria_nom: objPlato.Categorium?.categoria_nom || \"Sin categoria\"\r\n              }\r\n            })\r\n          });\r\n          setCargando(false);\r\n        }\r\n      }\r\n    });\r\n\r\n    // clean up\r\n    return () => {\r\n      mounted = false;\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n              <Link className=\"btn btn-primary\" to=\"/admin/plato/crear\">\r\n                Crear Plato\r\n              </Link>\r\n              <hr />\r\n              {\r\n                cargando ?\r\n                  <div className=\"alert alert-info\">\r\n                    Cargando\r\n                  </div> :\r\n                  <MDBDataTableV5 data={platos} bordered hover striped />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n// export default withRouter(AdminPlatoScreen)\r\nexport default AdminPlatoScreen\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route, Switch\r\n} from \"react-router-dom\"\r\nimport AdminHeader from './components/AdminHeader'\r\nimport AdminDashboardScreen from './pages/dashboard/AdminDashboardScreen'\r\nimport AdminMesaScreen from './pages/mesa/AdminMesaScreen'\r\nimport AdminPedidoScreen from './pages/pedido/AdminPedidoScreen'\r\nimport AdminPlatoCrearScreen from './pages/plato/AdminPlatoCrearScreen'\r\nimport AdminPlatoScreen from './pages/plato/AdminPlatoScreen'\r\n\r\nconst AdminRouter = () => {\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <Switch>\r\n        <Route path=\"/admin/mesa\">\r\n          <AdminMesaScreen />\r\n        </Route>\r\n        <Route path=\"/admin/plato/crear\" >\r\n          <AdminPlatoCrearScreen />\r\n        </Route>\r\n        <Route path=\"/admin/plato\" >\r\n          <AdminPlatoScreen />\r\n        </Route>\r\n        <Route path=\"/admin/pedido\" >\r\n          <AdminPedidoScreen />\r\n        </Route>\r\n        <Route path=\"/admin\" exact>\r\n          <AdminDashboardScreen />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminRouter\r\n","import axios from \"axios\";\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postLogin = async (objLogin) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/login`,\r\n    JSON.stringify(objLogin), {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  console.log(rpta);\r\n  return rpta;\r\n}\r\n\r\nexport const postVerificar = async (token) => {\r\n\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/verificar`,\r\n    null, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`\r\n    }\r\n  });\r\n  return rpta\r\n  // const peticion = await fetch(`${URL_BACKEND}/verificar`,\r\n  //   {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Authorization\": `Bearer ${token}`\r\n  //     }\r\n  //   });\r\n  // const rpta = await peticion.json();\r\n  // return rpta\r\n\r\n}","import React, { useContext, useState } from 'react'\r\nimport AuthContext from '../../../context/authContext';\r\nimport { postLogin } from '../../../services/authService';\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst AuthLoginScreen = ({ history }) => {\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    correo: \"\",\r\n    password: \"\",\r\n  });\r\n  const { iniciarSesionContext } = useContext(AuthContext);\r\n\r\n  const handleChange = e => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postLogin(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        iniciarSesionContext(rpta.data.token);\r\n        // debemos redireccionar al admin, o al punto de venta\r\n        let { token } = rpta.data;\r\n        let payloadString = token.split(\".\")[1];\r\n        let payloadDecoded = atob(payloadString);\r\n        let payloadJSON = JSON.parse(payloadDecoded);\r\n        if (payloadJSON.usu_tipo === \"admin\") {\r\n          history.push(\"/admin\")\r\n        } else {\r\n          history.push(\"/pos/terminal\")\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Inicio de Sesión</h1>\r\n        <form className=\"formulario\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"\">Email:</label>\r\n          <input\r\n            name=\"correo\"\r\n            onChange={handleChange}\r\n            value={formulario.correo}\r\n            type=\"email\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Email\" />\r\n          <label htmlFor=\"\">Password:</label>\r\n          <input\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={formulario.password}\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Iniciar Sesión\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default withRouter(AuthLoginScreen)\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AuthLoginScreen from './pages/AuthLoginScreen';\r\nconst AuthRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/auth/login\">\r\n        <AuthLoginScreen />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AuthRouter\r\n","\r\n\r\nexport const authReducer = (stateAntiguo, payload) => {\r\n\r\n  if (payload.action === \"INICIAR_SESION\") {\r\n    return {\r\n      ...payload.data\r\n    }\r\n  }\r\n  if (payload.action === \"CERRAR_SESION\") {\r\n    localStorage.removeItem(\"token\");\r\n    return {\r\n      autenticado: false,\r\n      cargando: false,\r\n      usu_nom: null,\r\n      token: null,\r\n      usu_id: null,\r\n      usu_tipo: null\r\n    }\r\n\r\n  }\r\n\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport AuthContext from './authContext'\r\nimport { authReducer } from './authReducer'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { postVerificar } from '../services/authService'\r\n\r\nconst initialState = {\r\n  autenticado: false,\r\n  cargando: true,\r\n  token: null,\r\n  usu_nom: null,\r\n  usu_id: null,\r\n  usu_tipo: null\r\n}\r\n\r\n\r\nconst AuthState = (props) => {\r\n\r\n  const [state, setState] = useReducer(authReducer, initialState);\r\n\r\n  console.log(props);\r\n\r\n  const iniciarSesionContext = (token) => {\r\n\r\n    localStorage.setItem(\"token\", token);\r\n    let payloadString = token.split(\".\")[1];\r\n    let payloadStringDecript = atob(payloadString);\r\n    let payloadJson = JSON.parse(payloadStringDecript);\r\n\r\n    setState(\r\n      {\r\n        action: \"INICIAR_SESION\",\r\n        data: {\r\n          autenticado: true,\r\n          cargando: false,\r\n          token: token,\r\n          usu_nom: payloadJson.usu_nom,\r\n          usu_id: payloadJson.usu_id,\r\n          usu_tipo: payloadJson.usu_tipo\r\n        }\r\n      }\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n  const iniciarSesionConLocalStorage = () => {\r\n\r\n    let token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      postVerificar(token).then(rpta => {\r\n        if (rpta.data.ok) {\r\n          iniciarSesionContext(token)\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n        cerrarSesion();\r\n      })\r\n    } else {\r\n      cerrarSesion();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    iniciarSesionConLocalStorage();\r\n  }, [])\r\n\r\n\r\n  const cerrarSesion = () => {\r\n    setState({\r\n      action: \"CERRAR_SESION\"\r\n    })\r\n    //props.history.replace(\"ruta\"), similar al \"push\"\r\n    // pero no deja historial de las páginas visitaras anteriormente\r\n    // para no hacer un \"atrás!\"\r\n    // props.history.replace(\"/\");\r\n  }\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      iniciarSesionContext,\r\n      cerrarSesion,\r\n      ...state\r\n    }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default withRouter(AuthState)\r\n","import React, { useContext } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport AuthContext from './context/authContext'\r\n\r\nconst PrivateRoute = (props) => {\r\n\r\n  const { autenticado, cargando, usu_tipo } = useContext(AuthContext)\r\n\r\n  return (\r\n\r\n    cargando ?\r\n      <div>\r\n        Cargando joven...\r\n      </div> :\r\n      autenticado ?\r\n\r\n        usu_tipo === \"admin\" && props.path.startsWith(\"/admin\") ||\r\n          usu_tipo === \"ventas\" && props.path.startsWith(\"/pos\") ?\r\n\r\n          <Route path={props.path}>\r\n            {props.children}\r\n          </Route> :\r\n\r\n          < Redirect to={\"/\"} />\r\n        :\r\n        <Redirect to={\"/\"} />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst GuestHomeScreen = () => {\r\n  return (\r\n    <main className=\"container-fluid\">\r\n\r\n      <div className=\"row bg-dark justify-content-center align-items-center\" style={{\r\n        minHeight: \"100vh\"\r\n      }}>\r\n\r\n        <div className=\"col-md-3\">\r\n          <Link to=\"/admin\">\r\n            <div className=\"card p-5 bg-warning text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">\r\n                  Admin\r\n              </h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to=\"/pos/terminal\">\r\n            <div className=\"card p-5 bg-info text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">\r\n                  Terminal POS\r\n              </h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to=\"/auth/login\">\r\n            <div className=\"card p-5 bg-danger text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">\r\n                  Login\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default GuestHomeScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport GuestHomeScreen from './pages/GuestHomeScreen'\r\n\r\nconst GuestRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <GuestHomeScreen />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default GuestRouter\r\n","import React from 'react'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport \"./styles/index.css\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./styles/invoice.css\"\r\nimport \"./styles/login.css\"\r\n\r\nimport PosRouter from './modules/pos/PosRouter';\r\nimport AdminRouter from './modules/admin/AdminRouter';\r\nimport AuthRouter from './modules/auth/AuthRouter';\r\nimport AuthState from './context/authState';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport GuestRouter from './modules/guest/GuestRouter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <AuthState>\r\n        <Switch>\r\n          <PrivateRoute path=\"/pos\">\r\n            <PosRouter />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/admin\">\r\n            <AdminRouter />\r\n          </PrivateRoute>\r\n          <Route path=\"/auth\">\r\n            <AuthRouter />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <GuestRouter />\r\n          </Route>\r\n        </Switch>\r\n      </AuthState>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}